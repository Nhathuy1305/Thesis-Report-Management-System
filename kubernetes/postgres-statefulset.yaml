apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  labels:
    app: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  serviceName: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      initContainers:
        - name: clean-data-dir
          image: busybox
          command: ['sh', '-c', 'mkdir -p /var/lib/postgresql/data/pgdata && chown -R 999:999 /var/lib/postgresql/data/pgdata && chmod -R 700 /var/lib/postgresql/data/pgdata && rm -rf /var/lib/postgresql/data/pgdata/*']
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      containers:
        - name: postgresql
          image: postgres:11
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data/pdata
              name: postgres-data
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: services-config
                  key: POSTGRES_DB
                  
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: services-config
                  key: POSTGRES_USER

            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: services-config
                  key: POSTGRES_PASSWORD

            - name: PGDATA
              value: /var/lib/postgresql/data/pdata

  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: gp2
        resources:
          requests:
            storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
spec:
  selector:
    app: postgresql
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432